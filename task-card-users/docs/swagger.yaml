definitions:
  request.UserRequest:
    properties:
      email:
        type: string
      role_id:
        maximum: 2
        minimum: 1
        type: integer
      username:
        maxLength: 40
        minLength: 4
        type: string
      userpass:
        minLength: 6
        type: string
    required:
    - email
    - role_id
    - username
    - userpass
    type: object
  response.UserResponse:
    properties:
      email:
        type: string
      id:
        type: integer
      role_id:
        type: integer
      username:
        type: string
    type: object
  rest_err.Causes:
    properties:
      field:
        type: string
      message:
        type: string
    type: object
  rest_err.RestErr:
    properties:
      causes:
        items:
          $ref: '#/definitions/rest_err.Causes'
        type: array
      code:
        type: integer
      error:
        type: string
      message:
        type: string
    type: object
  rest_success.BaseRequestReturn:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
info:
  contact: {}
paths:
  /users:
    get:
      consumes:
      - application/json
      description: Route to get all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/response.UserResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest_err.RestErr'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest_err.RestErr'
      summary: Get all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Route to create a new user
      parameters:
      - description: User info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest_success.BaseRequestReturn'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest_err.RestErr'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest_err.RestErr'
      summary: Create new user
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Route to delete a user
      parameters:
      - description: User id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest_success.BaseRequestReturn'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest_err.RestErr'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest_err.RestErr'
      summary: Delete a user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Route to get a user
      parameters:
      - description: User id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest_err.RestErr'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest_err.RestErr'
      summary: Get a user
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Route to update a user
      parameters:
      - description: User id
        in: path
        name: id
        required: true
        type: integer
      - description: User info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest_success.BaseRequestReturn'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest_err.RestErr'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest_err.RestErr'
      summary: Update a user
      tags:
      - users
swagger: "2.0"
